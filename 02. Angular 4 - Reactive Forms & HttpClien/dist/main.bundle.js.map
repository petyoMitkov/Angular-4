{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/edit-form/edit-form.component.css","webpack:///./src/app/components/form/form.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/edit-form/edit-form.component.html","webpack:///./src/app/components/form/form.component.html","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/components/edit-form/edit-form.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/form/form.component.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 143\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"    .dashboard {\\r\\n        border: 8px solid rgb(110, 181, 209);\\r\\n        border-radius: 10px;\\r\\n        margin-top: 10px;\\r\\n        padding: 20px 20px 150px 20px;\\r\\n        animation: fadeInDashboard 1.2s;\\r\\n    }\\r\\n    \\r\\n    .btn:active,\\r\\n    .btn:focus {\\r\\n        outline: none;\\r\\n    }\\r\\n    \\r\\n    .header {\\r\\n        text-align: center;\\r\\n        margin-bottom: 40px;\\r\\n        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif\\r\\n    }\\r\\n    \\r\\n    li {\\r\\n        margin-bottom: 4px;\\r\\n    }\\r\\n    /* ======= Contacts List =======*/\\r\\n    \\r\\n    .person-name {\\r\\n        line-height: 10px;\\r\\n        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif\\r\\n    }\\r\\n    \\r\\n    .city-and-occupation {\\r\\n        display: -ms-flexbox;\\r\\n        display: flex;\\r\\n        font-style: italic;\\r\\n        font-weight: 500;\\r\\n        font-size: 1.1em;\\r\\n        padding: 10px 0 10px 0;\\r\\n    }\\r\\n    \\r\\n    .city-and-occupation :first-child {\\r\\n        -ms-flex: 1;\\r\\n            flex: 1;\\r\\n    }\\r\\n    \\r\\n    .city-and-occupation span {\\r\\n        -ms-flex: 2;\\r\\n            flex: 2;\\r\\n    }\\r\\n    \\r\\n    .glyphicon-phone-alt {\\r\\n        font-size: 1.2em;\\r\\n        color: rgb(102, 102, 102);\\r\\n        margin-right: 10px;\\r\\n    }\\r\\n    \\r\\n    .phone-holder {\\r\\n        font-size: 1.4em;\\r\\n    }\\r\\n    \\r\\n    .delete-holder {\\r\\n        padding: 5px 0 0px 0;\\r\\n        text-align: right;\\r\\n    }\\r\\n    /* ================ Animation ==================== */\\r\\n    \\r\\n    .add-new-item,\\r\\n    .list-group-item {\\r\\n        animation: fadeIn 1s;\\r\\n    }\\r\\n    \\r\\n    @keyframes fadeIn {\\r\\n        0% {\\r\\n            opacity: 0.5;\\r\\n            background: rgb(19, 161, 26);\\r\\n        }\\r\\n        50% {\\r\\n            background: rgb(19, 161, 26);\\r\\n            opacity: 1;\\r\\n        }\\r\\n        100% {\\r\\n            background: rgb(255, 255, 255);\\r\\n            opacity: 1;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    @keyframes fadeInDashboard {\\r\\n        0% {\\r\\n            opacity: 0;\\r\\n        }\\r\\n        99% {\\r\\n            opacity: 0;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    @media (max-width: 768px) {\\r\\n        .dashboard {\\r\\n            padding: 0px 0px 150px 0px;\\r\\n            border: none;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    .stiky {\\r\\n        -webkit-position: -webkit-sticky;\\r\\n        position: sticky;\\r\\n        top: 10px;\\r\\n    }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.css\n// module id = 144\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".form-holder {\\r\\n    /*border: 1px solid rgb(219, 219, 219);*/\\r\\n    border-radius: 10px;\\r\\n    margin: auto;\\r\\n    margin-bottom: 30px;\\r\\n    padding: 20px;\\r\\n    box-shadow: 2px 2px 8px rgb(53, 53, 53);\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\nlegend {\\r\\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif\\r\\n}\\r\\n\\r\\n\\r\\n/* ======= Form Validations Styles ======== */\\r\\n\\r\\n.form-control.ng-valid.ng-touched {\\r\\n    border: 1px solid rgb(107, 216, 44) !important;\\r\\n}\\r\\n\\r\\n.form-control.ng-touched.ng-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-wrap: wrap;\\r\\n        flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nlabel span {\\r\\n    -ms-flex: 1;\\r\\n        flex: 1;\\r\\n}\\r\\n\\r\\ninput,\\r\\nselect {\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\n.span-invalid {\\r\\n    display: inline-block;\\r\\n    width: 100%;\\r\\n    position: relative;\\r\\n    top: -5px;\\r\\n    padding-top: 5px;\\r\\n    padding-bottom: 5px;\\r\\n    padding-left: 15px;\\r\\n    border-bottom-left-radius: 5px;\\r\\n    border-bottom-right-radius: 5px;\\r\\n    background: red;\\r\\n    color: white;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n.input-info {\\r\\n    color: rgb(158, 158, 158);\\r\\n    margin: auto;\\r\\n    font-size: 0.8em;\\r\\n}\\r\\n\\r\\n\\r\\n/* ============ Edit Contact Form ============== */\\r\\n\\r\\n.edit-contact-form {\\r\\n    background: rgb(207, 232, 241);\\r\\n    /* display: flex;*/\\r\\n    display: block;\\r\\n    z-index: 3;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/edit-form/edit-form.component.css\n// module id = 145\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".form-holder {\\r\\n    /*border: 1px solid rgb(219, 219, 219);*/\\r\\n    border-radius: 10px;\\r\\n    margin: auto;\\r\\n    margin-bottom: 30px;\\r\\n    padding: 20px;\\r\\n    box-shadow: 2px 2px 8px rgb(53, 53, 53);\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\nlegend {\\r\\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif\\r\\n}\\r\\n\\r\\n\\r\\n/* ======= Form Validations Styles ======== */\\r\\n\\r\\n.form-control.ng-valid.ng-touched {\\r\\n    border: 1px solid rgb(107, 216, 44) !important;\\r\\n}\\r\\n\\r\\n.form-control.ng-touched.ng-invalid {\\r\\n    border: 1px solid red !important;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -ms-flex-wrap: wrap;\\r\\n        flex-wrap: wrap;\\r\\n}\\r\\n\\r\\nlabel span {\\r\\n    -ms-flex: 1;\\r\\n        flex: 1;\\r\\n}\\r\\n\\r\\ninput,\\r\\nselect {\\r\\n    z-index: 2;\\r\\n}\\r\\n\\r\\n.span-invalid {\\r\\n    display: inline-block;\\r\\n    width: 100%;\\r\\n    position: relative;\\r\\n    top: -5px;\\r\\n    padding-top: 5px;\\r\\n    padding-bottom: 5px;\\r\\n    padding-left: 15px;\\r\\n    border-bottom-left-radius: 5px;\\r\\n    border-bottom-right-radius: 5px;\\r\\n    background: red;\\r\\n    color: white;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n.input-info {\\r\\n    color: rgb(158, 158, 158);\\r\\n    margin: auto;\\r\\n    font-size: 0.8em;\\r\\n}\\r\\n\\r\\n\\r\\n/* ============ Add Contact Form ============== */\\r\\n\\r\\n.add-contact-form {\\r\\n    /*display: none;*/\\r\\n}\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/form/form.component.css\n// module id = 146\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n    <app-dashboard></app-dashboard>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 147\n// module chunks = 1","module.exports = \"<div class=\\\"row dashboard\\\">\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 header\\\">\\n        <h1>\\n            Phone Book with data from Firebase\\n        </h1>\\n    </div>\\n\\n    <div *ngIf=\\\"!viewEditForm\\\" class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-5 col-lg-offset-1\\\">\\n        <div class=\\\"app-form\\\">\\n            <app-form (newContact)=\\\"onNewContact($event)\\\"></app-form>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"viewEditForm\\\" class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-5 col-lg-offset-1 stiky\\\">\\n        <div class=\\\"app-edit-form\\\">\\n            <app-edit-form [editValue]=\\\"editValue\\\" (updatedContact)=\\\"onUpdatedContact($event)\\\" (editCancel)=\\\"onEeditCancel($event)\\\">\\n            </app-edit-form>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-5\\\">\\n        <ul class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let contact of contactsList\\\" let i=\\\"index\\\">\\n\\n                <h3 class=\\\"person-name\\\">{{contact.person}}</h3>\\n                <div class=\\\"city-and-occupation\\\">\\n                    <span> {{contact.city}} </span> <span> {{contact.occupation}} </span>\\n                </div>\\n\\n                <span class=\\\"glyphicon glyphicon-phone-alt\\\"></span>\\n                <span class=\\\"phone-holder\\\"> {{contact.phone}} </span>\\n\\n\\n                <div class=\\\"delete-holder\\\">\\n\\n                    <button (click)=\\\"edit(contact)\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">Edit Contact</button>\\n\\n                    <button (click)=\\\"deleteRecord(contact)\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n                </div>\\n\\n            </li>\\n        </ul>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.html\n// module id = 148\n// module chunks = 1","module.exports = \"<!-- Edit Contact -->\\n<div id=\\\"edit-form\\\" class=\\\"form-holder edit-contact-form\\\">\\n    <form [formGroup]=\\\" editForm \\\" (ngSubmit)=\\\"editRecord(editForm.value, editValue.id) \\\" novalidate>\\n        <legend>Edit {{editValue.person}}</legend>\\n\\n        <!-- Name - Person-->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\"><span>Name</span> <small class=\\\"input-info\\\">required, min 3 chars,only capital letters</small></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"person\\\">\\n            <span *ngIf=\\\"editForm.controls['person'].pristine && editForm.controls['person'].touched\\n                || editForm.controls['person'].value ==='' && editForm.controls['person'].touched\\\" class=\\\"span-invalid\\\">\\n                Name is required.\\n            </span>\\n            <span *ngIf=\\\"editForm.controls['person'].hasError('minlength')\\\" class=\\\"span-invalid\\\">\\n                Min length 3 chars\\n            </span>\\n            <span *ngIf=\\\"editForm.controls['person'].errors?.pattern && !editForm.controls['person'].hasError('minlength')\\\" class=\\\"span-invalid\\\">\\n                Only capital letters: IVAN IVANOV\\n            </span>\\n        </div>\\n\\n        <!-- City -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\"><span>City</span> <small class=\\\"input-info\\\">required</small></label>\\n            <select name=\\\"\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\">\\n                <option value=\\\"\\\" disabled=\\\"true\\\" [selected]=\\\"true\\\">--please select--</option>\\n                <option *ngFor=\\\"let city of selectCityList\\\" value=\\\"{{city}}\\\">\\n                    {{city}}\\n                </option>\\n            </select>\\n            <span *ngIf=\\\"editForm.controls['city'].pristine && editForm.controls['city'].touched\\\" class=\\\"span-invalid\\\">\\n                City is required.\\n            </span>\\n        </div>\\n\\n        <!-- Occupation -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\"><span>Occupation</span> <small class=\\\"input-info\\\">required</small></label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"occupation\\\">\\n                <option value=\\\"\\\" disabled=\\\"true\\\" [selected]=\\\"true\\\">--please select--</option>\\n                <option *ngFor=\\\"let occupation of selectOccupationList\\\" value=\\\"{{occupation}}\\\">\\n                    {{occupation}}\\n                </option>\\n            </select>\\n            <span *ngIf=\\\"editForm.controls['occupation'].pristine && editForm.controls['occupation'].touched\\\" class=\\\"span-invalid\\\">\\n                Occupation is required.\\n            </span>\\n        </div>\\n\\n        <!-- Phone -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\"><span>Phone</span> <small class=\\\"input-info\\\">required, min 6 numbers, start with + or 00, onliy numbers</small></label>\\n            <input type=\\\"tel\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\">\\n            <span *ngIf=\\\"editForm.controls['phone'].pristine && editForm.controls['phone'].touched\\\" class=\\\"span-invalid\\\">\\n                Phone is required.\\n            </span>\\n            <span *ngIf=\\\"editForm.controls['phone'].hasError('minlength')\\\" class=\\\"span-invalid\\\">\\n                Min length is 6 chars\\n            </span>\\n            <span *ngIf=\\\"editForm.controls['phone'].errors?.phoneValidatorStart\\n                && !editForm.controls['phone'].hasError('minlength')\\n                && !editForm.controls['phone'].pristine\\\" class=\\\"span-invalid\\\">\\n                Start with \\\"+\\\" or \\\"00\\\"\\n                for example: +35988565487\\n            </span>\\n            <span *ngIf=\\\"editForm.controls['phone'].errors?.phoneValidatorOnlyNumbers\\n                && !editForm.controls['phone'].hasError('minlength')\\n                && !editForm.controls['phone'].pristine\\n                && !editForm.controls['phone'].errors?.phoneValidatorStart\\\" class=\\\"span-invalid \\\">\\n                Use Only Numbers!\\n            </span>\\n        </div>\\n\\n        <div class=\\\"text-right \\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary \\\">Save Changes</button>\\n\\n        </div>\\n    </form>\\n    <button type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/edit-form/edit-form.component.html\n// module id = 149\n// module chunks = 1","module.exports = \"<!-- Add Contact -->\\n<div class=\\\"form-holder add-contact-form\\\">\\n    <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"postRecord(addForm.value)\\\" novalidate>\\n        <legend>Add Record</legend>\\n\\n        <!-- Name -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\"><span>Name</span> <small class=\\\"input-info\\\">required, min 3 chars,only capital letters</small></label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n            <span *ngIf=\\\"addForm.controls['name'].pristine && addForm.controls['name'].touched\\n                || addForm.controls['name'].value ==='' && addForm.controls['name'].touched\\\" class=\\\"span-invalid\\\">\\n                Name is required.\\n            </span>\\n            <span *ngIf=\\\"addForm.controls['name'].hasError('minlength')\\\" class=\\\"span-invalid\\\">\\n                Min length 3 chars\\n            </span>\\n            <span *ngIf=\\\"addForm.controls['name'].errors?.pattern && !addForm.controls['name'].hasError('minlength')\\\" class=\\\"span-invalid\\\">\\n                Only capital letters: IVAN IVANOV\\n            </span>\\n        </div>\\n\\n        <!-- City -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\"><span>City</span> <small class=\\\"input-info\\\">required</small></label>\\n            <select name=\\\"\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\">\\n                <option value=\\\"\\\" disabled=\\\"true\\\" [selected]=\\\"true\\\">--please select--</option>\\n                <option *ngFor=\\\"let city of selectCityList\\\" value=\\\"{{city}}\\\">\\n                    {{city}}\\n                </option>\\n            </select>\\n            <span *ngIf=\\\"addForm.controls['city'].pristine && addForm.controls['city'].touched\\\" class=\\\"span-invalid\\\">\\n                City is required.\\n            </span>\\n        </div>\\n\\n        <!-- Occupation -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\"><span>Occupation</span> <small class=\\\"input-info\\\">required</small></label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"occupation\\\">\\n                <option value=\\\"\\\" disabled=\\\"true\\\" [selected]=\\\"true\\\">--please select--</option>\\n                <option *ngFor=\\\"let occupation of selectOccupationList\\\" value=\\\"{{occupation}}\\\">\\n                    {{occupation}}\\n                </option>\\n            </select>\\n            <span *ngIf=\\\"addForm.controls['occupation'].pristine && addForm.controls['occupation'].touched\\\" class=\\\"span-invalid\\\">\\n                Occupation is required.\\n            </span>\\n        </div>\\n\\n        <!-- Phone -->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\"><span>Phone</span> <small class=\\\"input-info\\\">required, min 6 numbers, start with + or 00, onliy numbers</small></label>\\n            <input type=\\\"tel\\\" class=\\\"form-control\\\" formControlName=\\\"phone\\\">\\n            <span *ngIf=\\\"addForm.controls['phone'].pristine && addForm.controls['phone'].touched\\\" class=\\\"span-invalid\\\">\\n                Phone is required.\\n            </span>\\n            <span *ngIf=\\\"addForm.controls['phone'].hasError('minlength')\\\" class=\\\"span-invalid\\\">\\n                Min length is 6 chars\\n            </span>\\n            <span *ngIf=\\\"addForm.controls['phone'].errors?.phoneValidatorStart\\n                && !addForm.controls['phone'].hasError('minlength')\\n                && !addForm.controls['phone'].pristine\\\" class=\\\"span-invalid\\\">\\n                Start with \\\"+\\\" or \\\"00\\\"\\n                for example: +35988565487\\n            </span>\\n            <span *ngIf=\\\"addForm.controls['phone'].errors?.phoneValidatorOnlyNumbers\\n                && !addForm.controls['phone'].hasError('minlength')\\n                && !addForm.controls['phone'].pristine\\n                && !addForm.controls['phone'].errors?.phoneValidatorStart\\\" class=\\\"span-invalid \\\">\\n                Use Only Numbers!\\n            </span>\\n        </div>\\n\\n        <div class=\\\"text-right \\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary \\\" [disabled]=\\\"!addForm.valid \\\">Add Record</button>\\n        </div>\\n    </form>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/form/form.component.html\n// module id = 150\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n//import 'rxjs/add/operator/map';\n\nimport { Contact } from '../models/contact-interface';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ \"Content-type\": \"application/json\" })\n};\n\n@Injectable()\nexport class DataService {\n    fbUrl = \"https://phonebook-f6ac7.firebaseio.com/phonebook.json\";\n    //fbUrl = \"https://jsonplaceholder.typicode.com/users\";\n\n    contacts: Contact[] = [];\n\n    constructor(private _http: HttpClient) { }\n\n\n    getData(): Observable<Contact[]> {\n        return this._http.get<Contact[]>(this.fbUrl);\n    }\n\n    initData() {\n        this.contacts = [];\n        this.getData().subscribe(res => {\n            for (var key in res) {\n                //console.log(key, res[key].person);\n                this.contacts.unshift({\n                    id: key,\n                    person: res[key].person,\n                    phone: res[key].phone,\n                    city: res[key].city,\n                    occupation: res[key].occupation\n\n                })\n            }\n        })\n        console.log(this.contacts);\n    }\n\n    postData(record: Contact): Observable<Contact> {\n        return this._http.post<Contact>(this.fbUrl, record, httpOptions);\n    }\n\n    deleteContact(contact: Contact): Observable<Contact> {\n        return this._http.delete<Contact>(`https://phonebook-f6ac7.firebaseio.com/phonebook/${contact.id}.json`, httpOptions);\n    }\n\n    updateContact(contact: Contact, id): Observable<Contact> {\n        let url = `https://phonebook-f6ac7.firebaseio.com/phonebook/${id}.json`;\n\n        return this._http.put<Contact>(url, contact, httpOptions);\n    }\n\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/data.service.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule, FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { DataService } from '../../services/data.service';\nimport { Contact } from '../../models/contact-interface';\n\n@Component({\n    selector: 'app-edit-form',\n    templateUrl: './edit-form.component.html',\n    styleUrls: ['./edit-form.component.css']\n})\nexport class EditFormComponent implements OnInit {\n    @Input() editValue;\n    @Output() updatedContact: EventEmitter<Contact> = new EventEmitter();\n    @Output() editCancel: EventEmitter<Object> = new EventEmitter();\n    cancelSwitch = false;\n\n\n    editForm: FormGroup;\n\n    selectCityList: string[] = [\n        \"Sofia\",\n        \"Vratsa\",\n        \"London\",\n        \"New York\"\n    ];\n\n    selectOccupationList: string[] = [\n        \"Angular Developer\",\n        \"Full Stack Developer\",\n        \"Node.js Developer\"\n    ];\n\n    constructor(private _dataService: DataService, private _formBilder: FormBuilder) { }\n\n    ngOnInit() {\n        this.createFormValidationEdit();\n    }\n\n    editRecord(contact, id) {\n        console.log(contact);\n        console.log(id);\n\n        this.updatedContact.emit({\n            id: id,\n            person: contact.person,\n            city: contact.city,\n            occupation: contact.occupation,\n            phone: contact.phone\n        });\n\n\n        this._dataService.updateContact(contact, id).subscribe(res => {\n            console.log(res);\n        });\n    }\n\n    cancel() {\n        this.editCancel.emit({\n            cancel: true\n        });\n\n    }\n\n    // Edit Validation ===================================\n    createFormValidationEdit() {\n        this.editForm = this._formBilder.group({\n            \"person\": [`${this.editValue.person}`, Validators.compose([\n                Validators.required,\n                Validators.minLength(3),\n                Validators.pattern(\"[A-Z]* *[ A-Z]+\")\n            ])],\n            \"city\": [`${this.editValue.city}`, Validators.required],\n            \"occupation\": [`${this.editValue.occupation}`, Validators.required],\n            \"phone\": [`${this.editValue.phone}`, Validators.compose([\n                Validators.required,\n                Validators.minLength(6),\n                this.phoneValidatorStart,\n                this.phoneValidatorOnlyNumbers\n            ])]\n        });\n    }\n    //===================================================\n\n    // Custrom Validation + or 00\n    phoneValidatorStart(control: FormControl) {\n        let phoneInput = control.value.trim();\n\n        if (phoneInput[0] === \"+\" || (phoneInput[0] === \"0\" && phoneInput[1] === \"0\")) {\n           return null;\n        }\n        return { 'phoneValidatorStart': { error: true }};\n    }\n\n    // Custrom Validation Only Numbers\n    phoneValidatorOnlyNumbers(control: FormControl) {\n        let phoneInput = control.value.trim();\n        let regEx =/^(\\+|00)+[0-9]+$/;\n\n        //console.log(regEx.test(phoneInput));\n        if (regEx.test(phoneInput)) {\n            return null;\n        }\n        return { 'phoneValidatorOnlyNumbers':  {error: true}}\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/edit-form/edit-form.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 79;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 79\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { DataService } from './services/data.service';\nimport { FormComponent } from './components/form/form.component';\nimport { EditFormComponent } from './components/edit-form/edit-form.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    FormComponent,\n    EditFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit, EventEmitter, ViewChild, AfterViewInit, Input } from '@angular/core';\nimport { DataService } from '../../services/data.service';\n\nimport { Contact } from '../../models/contact-interface';\nimport { EditFormComponent } from '../edit-form/edit-form.component';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements AfterViewInit {\n    contactsList: Contact[] = [];\n    editValue: Contact = {\n        id: \"\",\n        person: \"\",\n        city: \"\",\n        occupation: \"\",\n        phone: \"\"\n    }\n\n    @ViewChild(EditFormComponent) child;\n\n    viewEditForm = false;\n\n    constructor(private _dataService: DataService) { }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        this._dataService.initData();\n        this.contactsList = this._dataService.contacts;\n        console.log(this._dataService.contacts);\n    }\n\n    onNewContact(contact: Contact) {\n        this.contactsList.unshift(contact);\n    }\n\n    deleteRecord(contact: Contact) {\n        //if (confirm(`You will delete ${contact.person}.\\nAre you sure?`)) {\n        this._dataService.deleteContact(contact).subscribe(() => {\n            this.contactsList.forEach((cur, index) => {\n                if (contact.id === cur.id) {\n                    this.contactsList.splice(index, 1);\n                }\n            })\n        });\n        //}\n        console.log(`Deleted Contact: `);\n        console.log(contact);\n    }\n\n    edit(contact) {\n        this.editValue = contact;\n        this.viewEditForm = true;\n\n        if (this.viewEditForm === true) {\n            setTimeout(() => {    //<<<---    using ()=> syntax\n                this.child.createFormValidationEdit();\n            }, 100);\n        }\n    }\n\n\n\n    onUpdatedContact(contact) {\n        for (let i in this.contactsList) {\n            if (this.contactsList[i].id == contact.id) {\n                this.contactsList[i] = contact;\n            }\n        }\n    }\n\n    onEeditCancel(cancel) {\n       console.log(\"Tukaa\");\n       this.viewEditForm = false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/dashboard/dashboard.component.ts","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\nimport { FormsModule, FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { DataService } from '../../services/data.service';\nimport { Contact } from '../../models/contact-interface';\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n    contact: Contact;\n    @Output() newContact: EventEmitter<Contact> = new EventEmitter();\n   \n\n\n    selectCityList: string[] = [\n        \"Sofia\",\n        \"Vratsa\",\n        \"London\",\n        \"New York\"\n    ];\n\n    selectOccupationList: string[] = [\n        \"Angular Developer\",\n        \"Full Stack Developer\",\n        \"Node.js Developer\"\n    ];\n\n    addForm: FormGroup;\n   \n\n\n    constructor(private _dataService: DataService, private _formBilder: FormBuilder) { }\n\n    ngOnInit() {\n        this.createFormValidation();\n    }\n\n    postRecord(formData) {\n        let contact = {\n            person: formData.name,\n            city: formData.city,\n            occupation: formData.occupation,\n            phone: formData.phone\n        };\n\n        this._dataService.postData(contact).subscribe(\n            post => {\n                //console.log(post);\n                let newId = post[Object.keys(post)[0]];\n\n                this.newContact.emit({\n                    id: newId,\n                    person: contact.person,\n                    city: contact.city,\n                    occupation: contact.occupation,\n                    phone: contact.phone\n                });\n            },\n            error => alert(\"Some Error occurred. Check your internet connection.\"),\n\n            // Reset Form\n            () => {\n                this.createFormValidation()\n            }\n        );\n    }\n\n    editRecord() {\n\n    }\n\n    createFormValidation() {\n        this.addForm = this._formBilder.group({\n            \"name\": [\"\", Validators.compose([\n                Validators.required,\n                Validators.minLength(3),\n                Validators.pattern(\"[A-Z]* *[ A-Z]+\")\n            ])],\n            \"city\": [\"\", Validators.required],\n            \"occupation\": [\"\", Validators.required],\n            \"phone\": [\"\", Validators.compose([\n                Validators.required,\n                Validators.minLength(6),\n                this.phoneValidatorStart,\n                this.phoneValidatorOnlyNumbers\n            ])]\n        });\n    }\n\n    // Custrom Validation + or 00\n    phoneValidatorStart(control: FormControl) {\n        let phoneInput = control.value.trim();\n\n        if (phoneInput[0] === \"+\" || (phoneInput[0] === \"0\" && phoneInput[1] === \"0\")) {\n           return null;\n        }\n        return { 'phoneValidatorStart': { error: true }};\n    }\n\n    // Custrom Validation Only Numbers\n    phoneValidatorOnlyNumbers(control: FormControl) {\n        let phoneInput = control.value.trim();\n        let regEx =/^(\\+|00)+[0-9]+$/;\n\n        //console.log(regEx.test(phoneInput));\n        if (regEx.test(phoneInput)) {\n            return null;\n        }\n        return { 'phoneValidatorOnlyNumbers':  {error: true}}\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/form/form.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}